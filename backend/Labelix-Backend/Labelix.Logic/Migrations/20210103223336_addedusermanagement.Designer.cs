// <auto-generated />
using System;
using Labelix.Logic.DataContext.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Labelix.Logic.Migrations
{
    [DbContext(typeof(LabelixDbContext))]
    [Migration("20210103223336_addedusermanagement")]
    partial class addedusermanagement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.AIModelConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DockerImageName")
                        .HasColumnType("text");

                    b.Property<string>("InputDirectory")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Options")
                        .HasColumnType("text");

                    b.Property<string>("OutputDirectory")
                        .HasColumnType("text");

                    b.Property<string>("Parameter")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ai_model_configs");
                });

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("images");
                });

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("labels");
                });

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("FinishedAnnotation")
                        .HasColumnType("boolean");

                    b.Property<string>("LabeledPath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.Project_AIModelConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AIConfigKey")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectKey")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AIConfigKey");

                    b.HasIndex("ProjectKey");

                    b.ToTable("project_ai_model_configs");
                });

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.Project_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ProjectKey")
                        .HasColumnType("integer");

                    b.Property<int>("UserIdKey")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("project_users");
                });

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Keycloak_id")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.Image", b =>
                {
                    b.HasOne("Labelix.Logic.Entities.Persistence.Project", null)
                        .WithMany("ListOfImages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.Label", b =>
                {
                    b.HasOne("Labelix.Logic.Entities.Persistence.Project", "Project")
                        .WithMany("ListOfLabel")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Labelix.Logic.Entities.Persistence.Project_AIModelConfig", b =>
                {
                    b.HasOne("Labelix.Logic.Entities.Persistence.AIModelConfig", null)
                        .WithMany("Projects")
                        .HasForeignKey("AIConfigKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labelix.Logic.Entities.Persistence.Project", null)
                        .WithMany("AIConfigs")
                        .HasForeignKey("ProjectKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
